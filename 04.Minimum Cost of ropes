
Method:Expected Time Complexity : O(nlogn)
Expected Auxilliary Space : O(n)

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    int n=sc.nextInt();
	    long arr[]=new long[n];
	    for(int i=0;i<n;i++){
	        arr[i]=sc.nextInt();
	    }
		System.out.println(minCost(arr,n));
	}
	static long minCost(long arr[], int n) 
    {
        // your code here
        PriorityQueue<Long> pq=new PriorityQueue<>();
        for(long i:arr){
            pq.add(i);
        }
        
        long ans=0L;
        while(pq.size()>1){
            long r1=pq.poll();
            long r2=pq.poll();
            
            long sum=r1+r2;
            ans+=sum;
            pq.add(sum);
        }
        return ans;
    }
}
