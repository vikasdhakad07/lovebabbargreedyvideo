Method:Expected Time Complexity: O(NLogN)
Expected Auxiliary Space: O(1)

import java.util.*;
public class Main
{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int k=sc.nextInt();
		int arr[]=new int[n];
		for(int i=0;i<n;i++){
		    arr[i]=sc.nextInt();
		}
		System.out.println(candyStore(arr,n,k));
	}
	
	static ArrayList<Integer> candyStore(int candies[],int N,int K){
        // code here
        ArrayList<Integer> al=new ArrayList<>();
        Arrays.sort(candies);
        
        int min=0;
        int buy=0;
        int free=N-1;
        while(buy<=free){
            min=min+candies[buy];
            buy++;
            free=free-K;
        }
        
        int max=0;
        buy=N-1;
        free=0;
        while(free<=buy){
            max=max+candies[buy];
            buy--;
            free=free+K;
        }
        al.add(min);
        al.add(max);
        return al;
    }
}
