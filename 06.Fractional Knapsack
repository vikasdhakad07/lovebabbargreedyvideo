Method:Expected Time Complexity : O(NlogN)
Expected Auxilliary Space: O(1)


class Solution
{
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n) 
    {
        // Your code here
        Arrays.sort(arr,(i1,i2)->i2.value*i1.weight-i1.value*i2.weight);
        double res=0.0;
        
        for(int i=0;i<n;i++){
        if(arr[i].weight<=W){
            res+=arr[i].value;
            W-=arr[i].weight;
        }
        else{
            res+=(double)(arr[i].value)/arr[i].weight*W;
            break;
        }
        }
        return res;
    }
}
